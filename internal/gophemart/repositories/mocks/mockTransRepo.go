// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lambawebdev/go-bonus-system/internal/gophemart/repositories (interfaces: TransRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/lambawebdev/go-bonus-system/internal/gophemart/entities"
	blackboxservice "github.com/lambawebdev/go-bonus-system/internal/gophemart/services/blackBoxService"
)

// MockTransRepo is a mock of TransRepo interface.
type MockTransRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTransRepoMockRecorder
}

// MockTransRepoMockRecorder is the mock recorder for MockTransRepo.
type MockTransRepoMockRecorder struct {
	mock *MockTransRepo
}

// NewMockTransRepo creates a new mock instance.
func NewMockTransRepo(ctrl *gomock.Controller) *MockTransRepo {
	mock := &MockTransRepo{ctrl: ctrl}
	mock.recorder = &MockTransRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransRepo) EXPECT() *MockTransRepoMockRecorder {
	return m.recorder
}

// CreateTransaction mocks base method.
func (m *MockTransRepo) CreateTransaction(arg0 int, arg1 blackboxservice.OrderAccrual) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateTransaction", arg0, arg1)
}

// CreateTransaction indicates an expected call of CreateTransaction.
func (mr *MockTransRepoMockRecorder) CreateTransaction(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockTransRepo)(nil).CreateTransaction), arg0, arg1)
}

// GetBalance mocks base method.
func (m *MockTransRepo) GetBalance(arg0 context.Context) (entities.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", arg0)
	ret0, _ := ret[0].(entities.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockTransRepoMockRecorder) GetBalance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockTransRepo)(nil).GetBalance), arg0)
}

// GetTransactions mocks base method.
func (m *MockTransRepo) GetTransactions(arg0 context.Context) ([]entities.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions", arg0)
	ret0, _ := ret[0].([]entities.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockTransRepoMockRecorder) GetTransactions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockTransRepo)(nil).GetTransactions), arg0)
}
